@model BookStore.Areas.AdminArea.Data.AddItemVM


@using (Html.BeginForm("Create1", "Items", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <section class="content">
        <div class="row">
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title"> פריט הוספת  </h3>
                    </div>
                    @*<form action="/Admin/Items/Create" enctype="multipart/form-data" method="post" role="form">*@
                    <div class="box-body">
                        <div class="form-group">
                            <label for="text">item Name</label>
                            <input type="text" name="Name" class="form-control" placeholder="Product Name">
                        </div>
                        <div class="form-group">
                            <label for="text">Author Name</label>
                            <input type="text" name="Author" class="form-control" placeholder="Author Name">
                        </div>
                        <div class="form-group">
                            <label for="text">Description</label>
                            <input type="text" name="Description" class="form-control" placeholder="Description">
                        </div>
                        <div class="form-group">
                            <label for="text">Unit Price</label>
                            <input type="text" name="Price" class="form-control" placeholder="Unit Price">
                        </div>
                        <div class="form-group">
                            <label for="text">Units In Stock</label>
                            <input type="text" name="AmountInStack" class="form-control" placeholder="Units In Stock">
                        </div>
                        <div>
                            <img id="item_img"
                                 height="100"
                                 width="90"
                                 style="border:solid" />
                        </div>
                        <div>
                            <input type="file" title="search image" id="file1" name="Imgfile" onchange="show(this)" />
                        </div>

                        <div>
                            <div class="form-group">
                                <label for="Category">Choose Category</label>
                                <select id="CategorySelect" name="CategoryID" class="form-control">
                                    <option>בחר קטגוריה</option>

                                    @foreach (var item in Model.categories)
                                    {
                                        <option id="OldCategory" value="@item.Id">@item.Name</option>
                                    }
                                    <option id="newCategory" value="-1">אחר</option>
                                </select>
                                <input class="editOption" style="display:none;">
                            </div>

                        </div>
                        <div style="display:none" id="nnn">
                            <input id="createCtegory" type="text" name="category" class="form-control">
                            @*<input type="button" id="SubmitCtegory" />*@
                            
                        </div>
                        <div class="box-footer">
                            <button type="submit" class="btn btn-primary">Submit</button>&nbsp;
                            <a href="/Admin/Items/Index" class="btn btn-default">Product List</a>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>

    <div id="lll">שלום וברכה</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts

 {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $('#CategorySelect').change(function () {
            var selected = $('option:selected', this).attr('id');

            if (selected == "newCategory") {
                $('#nnn').show();

                $('#createCtegory').keyup(function () {
                    var editText = $('#createCtegory').val();
                    
                    $('#newCategory').html(editText);
                });

            } else {
                $('#nnn').hide();
            }
        });


     

    var url = '/Items/CreateCtegory';

    $('#SubmitCtegory').click(function ()
    {
        var url = "@Url.Action("CreateCtegory")";
        var CategoryName = $('#createCtegory').val();
            $.ajax({
                type: "POST",
                url: url,
                dataType: "json",
                data: { "CategoryName": CategoryName }, // change this
                success: function (data) {

                    $('#CategorySelect').value(data);
                    $('#lll').text(data);
                    alert(data);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            })
    });



 

        //uploud image to db
            function show(input) {
                if (input.files && input.files[0]) {
                    var filerdr = new FileReader();
                    filerdr.onload = function (e) {
                        $('#item_img').attr('src', e.target.result);
                    }
                    filerdr.readAsDataURL(input.files[0]);
                }
            }
    </script>

}